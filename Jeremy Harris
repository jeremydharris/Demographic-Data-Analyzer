import pandas as pd

# Load the dataset
def load_data(file_path):
    return pd.read_csv(file_path)

def analyze_data(df):
    # 1. How many people of each race are represented in this dataset?
    race_counts = df['race'].value_counts()

    # 2. What is the average age of men?
    average_age_men = round(df[df['sex'] == 'Male']['age'].mean(), 1)

    # 3. What is the percentage of people who have a Bachelor's degree?
    percentage_bachelors = round((df['education'] == 'Bachelors').mean() * 100, 1)

    # 4. What percentage of people with advanced education (Bachelors, Masters, or Doctorate) make more than 50K?
    advanced_education = df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
    percentage_advanced_education_over_50K = round((df[advanced_education]['salary'] == '>50K').mean() * 100, 1)

    # 5. What percentage of people without advanced education make more than 50K?
    non_advanced_education = ~advanced_education
    percentage_non_advanced_education_over_50K = round((df[non_advanced_education]['salary'] == '>50K').mean() * 100, 1)

    # 6. What is the minimum number of hours a person works per week?
    min_hours_per_week = df['hours-per-week'].min()

    # 7. What percentage of the people who work the minimum number of hours per week have a salary of more than 50K?
    percentage_min_hours_over_50K = round((df[df['hours-per-week'] == min_hours_per_week]['salary'] == '>50K').mean() * 100, 1)

    # 8. What country has the highest percentage of people that earn >50K and what is that percentage?
    country_percentage_over_50K = df.groupby('native-country')['salary'].value_counts(normalize=True).unstack().fillna(0)
    country_percentage_over_50K['>50K'] = country_percentage_over_50K['>50K'] * 100
    country_with_highest_percentage_over_50K = country_percentage_over_50K['>50K'].idxmax()
    highest_percentage_over_50K = round(country_percentage_over_50K['>50K'].max(), 1)

    # 9. Identify the most popular occupation for those who earn >50K in India.
    popular_occupation_india = df[(df['salary'] == '>50K') & (df['native-country'] == 'India')]['occupation'].mode()[0]

    # Return results as a dictionary
    return {
        'race_counts': race_counts,
        'average_age_men': average_age_men,
        'percentage_bachelors': percentage_bachelors,
        'percentage_advanced_education_over_50K': percentage_advanced_education_over_50K,
        'percentage_non_advanced_education_over_50K': percentage_non_advanced_education_over_50K,
        'min_hours_per_week': min_hours_per_week,
        'percentage_min_hours_over_50K': percentage_min_hours_over_50K,
        'country_with_highest_percentage_over_50K': country_with_highest_percentage_over_50K,
        'highest_percentage_over_50K': highest_percentage_over_50K,
        'popular_occupation_india': popular_occupation_india
    }
